name: Get Processed Variables

on:
  workflow_call:
    outputs:
      branchName:
        description: The branch name
        value: ${{ jobs.create_processed_variables.outputs.branchName }}
      tagName:
        description: The tag name
        value: ${{ jobs.create_processed_variables.outputs.tagName }}
      issueNumber:
        description: The issue or PR number
        value: ${{ jobs.create_processed_variables.outputs.issueNumber }}
      lastCommitSha:
        description: The last commit sha
        value: ${{ jobs.create_processed_variables.outputs.lastCommitSha }}

jobs:
  create_processed_variables:
    name: Create Processed Variables
    runs-on: ubuntu-latest
    outputs:
      branchName: ${{ steps.set_processed_variables.outputs.branchName }}
      tagName: ${{ steps.set_processed_variables.outputs.tagName }}
      issueNumber: ${{ steps.set_processed_variables.outputs.issueNumber }}
      lastCommitSha: ${{ steps.set_processed_variables.outputs.lastCommitSha }}
    steps:
      - name: Set Processed Variables
        id: set_processed_variables
        uses: actions/github-script@v7
        with:
          script: |
            // get the branch name (only available when run on branches, commits or tags - not when run on PRs)
            const branchNameRaw = context?.payload?.base_ref
            const branchName = branchNameRaw?.startsWith('refs/heads/')
              ? branchNameRaw?.replace(/^refs\/heads\//, "")
              : undefined
            core.setOutput("branchName", branchName)

            // get the tag name (can be 'refs/tags/<TAG_NAME>', 'refs/pull/<PR_NUMBER>/merge', ...)
            const tagNameRaw = context?.ref ?? context?.payload?.ref
            const tagName = tagNameRaw?.startsWith('refs/tags/')
              ? tagNameRaw?.replace(/^refs\/tags\//, "")
              : undefined
            core.setOutput("tagName", tagName)

            // get the issue/ PR number
            const issueNumber = context?.issue?.number || context?.payload?.pull_request?.number
            core.setOutput("issueNumber", issueNumber)

            // get the last commit sha
            const lastCommitSha = context?.payload?.after
            core.setOutput("lastCommitSha", lastCommitSha)
